name: Publish NuGet Package

on:
  push:
    tags:
      - 'v*' # Run only on version tags, e.g., v3.2.0

jobs:
  build-and-pack:
    runs-on: windows-latest  # Use the latest supported Windows runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install legacy .NET Framework Developer Packs
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://download.microsoft.com/download/E/2/1/E21644B5-2DF2-47C2-91BD-63C560427900/NDP452-KB2901954-DevPack.exe" -OutFile "dotnet45.exe"
          Start-Process -FilePath ".\dotnet45.exe" -ArgumentList "/q /norestart" -Wait
          
          Invoke-WebRequest -Uri "https://download.microsoft.com/download/D/D/3/DD35CC3A-495A-405D-9855-794092B4826F/NDP472-DevPack-ENU.exe" -OutFile "dotnet47.exe"
          Start-Process -FilePath ".\dotnet47.exe" -ArgumentList "/q /norestart" -Wait

          Invoke-WebRequest -Uri "https://download.microsoft.com/download/8/B/4/8B43450C-433F-452A-87F8-8B401954C34C/ndp48-devpack-enu.exe" -OutFile "dotnet48.exe"
          Start-Process -FilePath ".\dotnet48.exe" -ArgumentList "/q /norestart" -Wait

      - name: Restore and Build .NET Framework 4.5
        run: msbuild ./net45/RazorpayClient45.sln /t:Restore,Build /p:Configuration=Release

      - name: Restore and Build .NET Framework 4.7
        run: msbuild ./net47/RazorpayClient47.sln /t:Restore,Build /p:Configuration=Release

      - name: Restore and Build .NET Framework 4.8
        run: msbuild ./net48/RazorpayClient48.sln /t:Restore,Build /p:Configuration=Release
      
      - name: Restore and Build .NET 6.0
        run: dotnet build ./net6.0/RazorpayClient60.sln --configuration Release

      - name: Restore and Build .NET 8.0
        run: dotnet build ./net8.0/RazorpayClient80.sln --configuration Release

      - name: Get version from tag
        id: get_version
        run: |
          $VERSION = "${{ github.ref_name }}".Substring(1)
          echo "VERSION=$VERSION" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Pack NuGet package
        # Use the .nuspec file to control packaging.
        # Pass the version from the Git tag to override the version in the .nuspec
        run: dotnet pack Razorpay.nuspec --configuration Release --output ./nupkgs /p:PackageVersion=${{ env.VERSION }}

      - name: Upload NuGet package artifact
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: ./nupkgs/*.nupkg

  publish-nuget:
    needs: build-and-pack
    runs-on: ubuntu-latest
    
    steps:
      - name: Download NuGet package artifact
        uses: actions/download-artifact@v4
        with:
          name: nupkg
          path: ./nupkgs

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Push to NuGet
        run: dotnet nuget push "./nupkgs/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}